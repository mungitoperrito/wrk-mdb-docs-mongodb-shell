---
title: "Launch the ``mongosh`` Shell."
ref: launch-mongosh-shell
level: 4
content: |

  Create a ``mongosh`` session without connecting to a running database
  by using the :option:`--nodb` option:

  .. code-block:: javascript

     mongosh --nodb

---
title: "Create the Encryption Configuration."
ref: create-encryption-configuration
level: 4
content: |

  Configuring client-side field level encryption for Azure Key Vault
  requires a valid Tenant ID, Client ID, and Client Secret.
  
  In ``mongosh``, create a new
  :ref:`ClientSideFieldLevelEncryptionOptions` variable for storing the
  client-side field level encryption configuration, which contains these
  credentials:

  .. code-block:: javascript

     var ClientSideFieldLevelEncryptionOptions = {
       "keyVaultNamespace" : "encryption.__dataKeys",
       "kmsProviders" : {
         "azure" : {
           "tenantId" : "YOUR_TENANT_ID",
           "clientId" : "YOUR_CLIENT_ID",
           "clientSecret" : "YOUR_CLIENT_SECRET"
         }
       }
     }

  Fill in the values for ``YOUR_TENANT_ID``, ``YOUR_CLIENT_ID``, and
  ``YOUR_CLIENT_SECRET`` as appropriate.

---
title: "Connect with Encryption Support."
ref: connect-with-encryption
level: 4
content: |

  In ``mongosh``, use the :method:`Mongo()<Mongo()>` constructor to
  establish a database connection to the target cluster. Specify the
  :ref:`ClientSideFieldLevelEncryptionOptions` document as the second
  parameter to the :method:`Mongo()<Mongo()>` constructor to configure
  the connection for client-side field level encryption:

  .. code-block:: javascript

     csfleDatabaseConnection = Mongo(
       "mongodb://replaceMe.example.net:27017/?replicaSet=myMongoCluster",
       ClientSideFieldLevelEncryptionOptions
     )

  Replace the ``replaceMe.example.net`` :ref:`URI <mongodb-uri>` with
  the connection string for the target cluster.

---
title: "Create the Key Vault Object."
ref: create-keyvault-object
level: 4
content: |

  Create the ``keyVault`` object using the :method:`getKeyVault()
  <getKeyVault()>` shell method:

  .. code-block:: javascript

     keyVault = csfleDatabaseConnection.getKeyVault();
---
title: "Create the Encryption Key."
ref: create-encryption-key
level: 4
content: |

  Create the data encryption key using the
  :method:`createKey() <KeyVault.createKey()>` shell method:

  .. code-block:: javascript

     keyVault.createKey(
       "azure",
       { keyName: "keyvaultname", keyVaultEndpoint: "endpointname" }
     )

  Where:
  
  - ``keyvaultname`` is the name of your `Azure Key Vault
    <https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name>`__
  - ``endpointname`` is the name of the Key Vault Endpoint to use

  .. include:: /includes/fact-getkey-options.rst
...
